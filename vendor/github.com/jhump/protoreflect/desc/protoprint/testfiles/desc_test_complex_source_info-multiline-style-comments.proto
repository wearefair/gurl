syntax = "proto2";

option go_package = "github.com/jhump/protoreflect/internal/testprotos";

package foo.bar;

import "google/protobuf/descriptor.proto";

message Simple {
	optional string name = 1;

	optional uint64 id = 2;
}

extend google.protobuf.ExtensionRangeOptions {
	optional string label = 20000;
}

message Test {
	optional string foo = 1 [json_name = "|foo|"];

	repeated int32 array = 2;

	optional Simple s = 3;

	repeated Simple r = 4;

	map<string, int32> m = 5;

	optional bytes b = 6 [default = "\000\001\002\003\004\005\006\007fubar!"];

	extensions 100 to 200;

	extensions 300 to 350, 500 to 550 [(foo.bar.label) = "jazz"];

	message Nested {
		extend google.protobuf.MessageOptions {
			optional int32 fooblez = 20003;
		}

		message _NestedNested {
			option (foo.bar.Test.Nested.fooblez) = 10101;

			option (foo.bar.rept) = { foo:"goo" [foo.bar.Test.Nested._NestedNested._garblez]:"boo" };

			enum EEE {
				OK = 0;

				V1 = 1;

				V2 = 2;

				V3 = 3;

				V4 = 4;

				V5 = 5;

				V6 = 6;
			}

			extend Test {
				optional string _garblez = 100;
			}

			message NestedNestedNested {
				option (foo.bar.rept) = { foo:"hoo" [foo.bar.Test.Nested._NestedNested._garblez]:"spoo" };

				optional Test Test = 1;
			}
		}
	}
}

extend google.protobuf.MessageOptions {
	repeated Test rept = 20002;

	optional Test.Nested._NestedNested.EEE eee = 20010;

	optional Another a = 20020;
}

message Another {
	option (foo.bar.a) = { test:<foo:"m&m" array:1 array:2 s:<name:"yolo" id:98765> m:<key:"bar" value:200> m:<key:"foo" value:100>> fff:OK };

	option (foo.bar.eee) = V1;

	option (foo.bar.rept) = { foo:"abc" array:1 array:2 array:3 s:<name:"foo" id:123> r:<name:"f"> r:<name:"s"> r:<id:456> };
	option (foo.bar.rept) = { foo:"def" array:3 array:2 array:1 s:<name:"bar" id:321> r:<name:"g"> r:<name:"s"> };
	option (foo.bar.rept) = { foo:"def" };

	optional Test test = 1;

	optional Test.Nested._NestedNested.EEE fff = 2 [default = V1];
}

message Validator {
	optional bool authenticated = 1;

	enum Action {
		LOGIN = 0;

		READ = 1;

		WRITE = 2;
	}

	message Permission {
		optional Action action = 1;

		optional string entity = 2;
	}

	repeated Permission permission = 2;
}

extend google.protobuf.MethodOptions {
	optional Validator validator = 12345;
}

service TestTestService {
	rpc UserAuth ( Test ) returns ( Test ) {
		option (foo.bar.validator) = { authenticated:true permission:<action:LOGIN entity:"client"> };
	}

	rpc Get ( Test ) returns ( Test ) {
		option (foo.bar.validator) = { authenticated:true permission:<action:READ entity:"user"> };
	}
}
